

	.FUNCT	PARSER,PTR=P-LEXSTART,WORD,VAL=0,VERB=0,LEN,DIR=0,NW=0,NUM
	CALL	CLEAR-ITBL
	PUT	P-PRSO,P-MATCHLEN,0
	PUT	P-PRSI,P-MATCHLEN,0
	PUT	P-BUTS,P-MATCHLEN,0
	ZERO?	QUOTE-FLAG \?CND1
	EQUAL?	WINNER,ADVENTURER /?CND1
	SET	'WINNER,ADVENTURER
	LOC	WINNER >HERE
?CND1:	ZERO?	P-CONT /?ELS8
	SET	'PTR,P-CONT
	SET	'P-CONT,0
	EQUAL?	PRSA,V?TELL /?CND6
	ZERO?	SUPER-BRIEF \?CND6
	CRLF	
	JUMP	?CND6
?ELS8:	SET	'WINNER,ADVENTURER
	LOC	WINNER
	FSET?	STACK,VEHBIT /?CND17
	LOC	WINNER >HERE
?CND17:	ZERO?	SUPER-BRIEF \?CND20
	CRLF	
?CND20:	PRINTI	">"
	READ	P-INBUF,P-LEXV
?CND6:	GETB	P-LEXV,P-LEXWORDS >P-LEN
	ZERO?	P-LEN \?CND25
	PRINTI	"Beg pardon?"
	CRLF	
	RFALSE	
?CND25:	SET	'LEN,P-LEN
	SET	'P-DIR,0
	SET	'P-NCN,0
	SET	'P-GETFLAGS,0
?PRG30:	DLESS?	'P-LEN,0 \?ELS34
	SET	'QUOTE-FLAG,0
	JUMP	?REP31
?ELS34:	GET	P-LEXV,PTR >WORD
	ZERO?	WORD /?ELS36
	EQUAL?	WORD,W?THEN,W?. /?THN40
	EQUAL?	WORD,W?QUOTE \?ELS39
?THN40:	EQUAL?	WORD,W?QUOTE \?CND42
	ZERO?	QUOTE-FLAG /?ELS47
	SET	'QUOTE-FLAG,0
	JUMP	?CND42
?ELS47:	SET	'QUOTE-FLAG,1
?CND42:	ZERO?	P-LEN /?THN51
	ADD	PTR,P-LEXELEN >P-CONT
?THN51:	PUTB	P-LEXV,P-LEXWORDS,P-LEN
	JUMP	?REP31
?ELS39:	CALL	WT?,WORD,PS?DIRECTION,P1?DIRECTION >VAL
	ZERO?	VAL /?ELS54
	EQUAL?	VERB,ACT?WALK,0 \?ELS54
	EQUAL?	LEN,1 /?THN57
	EQUAL?	LEN,2 \?ELS60
	EQUAL?	VERB,ACT?WALK /?THN57
?ELS60:	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK >NW
	EQUAL?	NW,W?THEN,W?.,W?QUOTE \?ELS62
	GRTR?	LEN,2 /?THN57
?ELS62:	EQUAL?	NW,W?. \?ELS64
	GRTR?	LEN,1 /?THN57
?ELS64:	ZERO?	QUOTE-FLAG /?ELS66
	EQUAL?	LEN,2 \?ELS66
	EQUAL?	NW,W?QUOTE /?THN57
?ELS66:	GRTR?	LEN,2 \?ELS54
	EQUAL?	NW,W?COMMA,W?AND \?ELS54
?THN57:	SET	'DIR,VAL
	EQUAL?	NW,W?COMMA,W?AND \?CND69
	ADD	PTR,P-LEXELEN
	PUT	P-LEXV,STACK,W?THEN
?CND69:	GRTR?	LEN,2 /?CND32
	SET	'QUOTE-FLAG,0
	JUMP	?REP31
?ELS54:	CALL	WT?,WORD,PS?VERB,P1?VERB >VAL
	ZERO?	VAL /?ELS76
	ZERO?	VERB \?ELS76
	SET	'VERB,VAL
	PUT	P-ITBL,P-VERB,VAL
	PUT	P-ITBL,P-VERBN,P-VTBL
	PUT	P-VTBL,0,WORD
	MUL	PTR,2
	ADD	STACK,2 >NUM
	GETB	P-LEXV,NUM
	PUTB	P-VTBL,2,STACK
	ADD	NUM,1
	GETB	P-LEXV,STACK
	PUTB	P-VTBL,3,STACK
	JUMP	?CND32
?ELS76:	CALL	WT?,WORD,PS?PREPOSITION,0 >VAL
	ZERO?	VAL \?THN81
	EQUAL?	WORD,W?ALL,W?ONE,W?A /?THN85
	CALL	WT?,WORD,PS?ADJECTIVE
	ZERO?	STACK \?THN85
	CALL	WT?,WORD,PS?OBJECT
	ZERO?	STACK /?ELS80
?THN85:	SET	'VAL,0
?THN81:	GRTR?	P-LEN,0 \?ELS89
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?OF \?ELS89
	ZERO?	VAL \?ELS89
	EQUAL?	WORD,W?ALL,W?ONE,W?A /?ELS89
	JUMP	?CND32
?ELS89:	ZERO?	VAL /?ELS93
	ZERO?	P-LEN /?THN96
	ADD	PTR,2
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?THEN,W?. \?ELS93
?THN96:	LESS?	P-NCN,2 \?CND32
	PUT	P-ITBL,P-PREP1,VAL
	PUT	P-ITBL,P-PREP1N,WORD
	JUMP	?CND32
?ELS93:	EQUAL?	P-NCN,2 \?ELS102
	PRINTI	"Too many noun clauses??"
	CRLF	
	RFALSE	
?ELS102:	INC	'P-NCN
	CALL	CLAUSE,PTR,VAL,WORD >PTR
	ZERO?	PTR /FALSE
	LESS?	PTR,0 \?CND32
	SET	'QUOTE-FLAG,0
	JUMP	?REP31
?ELS80:	CALL	WT?,WORD,PS?BUZZ-WORD
	ZERO?	STACK /?ELS113
	JUMP	?CND32
?ELS113:	PRINTI	"I can't use the word '"
	PRINTB	WORD
	PRINTI	"' here."
	CRLF	
	RFALSE	
?ELS36:	CALL	UNKNOWN-WORD,PTR
	SET	'QUOTE-FLAG,0
	RFALSE	
?CND32:	ADD	PTR,P-LEXELEN >PTR
	JUMP	?PRG30
?REP31:	ZERO?	DIR /?CND122
	SET	'PRSA,V?WALK
	SET	'PRSO,DIR
	RTRUE	
?CND122:	ZERO?	P-OFLAG /?CND126
	CALL	ORPHAN-MERGE
?CND126:	CALL	SYNTAX-CHECK
	ZERO?	STACK /FALSE
	CALL	SNARF-OBJECTS
	ZERO?	STACK /FALSE
	CALL	TAKE-CHECK
	ZERO?	STACK /FALSE
	CALL	MANY-CHECK
	ZERO?	STACK /FALSE
	RTRUE


	.FUNCT	WT?,PTR,BIT,B1=5,OFFSET=P-P1OFF,TYP
	GETB	PTR,P-PSOFF >TYP
	BTST	TYP,BIT \FALSE
	GRTR?	B1,4 /TRUE
	BAND	TYP,P-P1BITS >TYP
	EQUAL?	TYP,B1 /?CND13
	INC	'OFFSET
?CND13:	GETB	PTR,OFFSET
	RSTACK	


	.FUNCT	CLAUSE,PTR,VAL,WORD,OFF,NUM,ANDFLG=0,FIRST??=0,NW,?TMP1
	SUB	P-NCN,1
	MUL	STACK,2 >OFF
	ZERO?	VAL /?ELS3
	ADD	P-PREP1,OFF >NUM
	PUT	P-ITBL,NUM,VAL
	ADD	NUM,1
	PUT	P-ITBL,STACK,WORD
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?CND1
?ELS3:	INC	'P-LEN
?CND1:	ZERO?	P-LEN \?CND6
	DEC	'P-NCN
	RETURN	-1
?CND6:	ADD	P-NC1,OFF >NUM
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,NUM,STACK
?PRG9:	DLESS?	'P-LEN,0 \?CND11
	ADD	NUM,1 >?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	RETURN	-1
?CND11:	GET	P-LEXV,PTR >WORD
	ZERO?	WORD /?ELS16
	ZERO?	P-LEN \?ELS19
	SET	'NW,0
	JUMP	?CND17
?ELS19:	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK >NW
?CND17:	EQUAL?	WORD,W?AND,W?COMMA \?ELS24
	SET	'ANDFLG,1
	JUMP	?CND14
?ELS24:	EQUAL?	WORD,W?ALL,W?ONE \?ELS26
	EQUAL?	NW,W?OF \?CND14
	DEC	'P-LEN
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?CND14
?ELS26:	EQUAL?	WORD,W?THEN,W?. /?THN32
	CALL	WT?,WORD,PS?PREPOSITION
	ZERO?	STACK /?ELS31
	ZERO?	FIRST?? \?ELS31
?THN32:	INC	'P-LEN
	ADD	NUM,1 >?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	SUB	PTR,P-LEXELEN
	RETURN	STACK
?ELS31:	CALL	WT?,WORD,PS?OBJECT
	ZERO?	STACK /?ELS37
	CALL	WT?,WORD,PS?ADJECTIVE,P1?ADJECTIVE
	ZERO?	STACK /?ELS40
	ZERO?	NW /?ELS40
	CALL	WT?,NW,PS?OBJECT
	ZERO?	STACK /?ELS40
	JUMP	?CND14
?ELS40:	ZERO?	ANDFLG \?ELS44
	EQUAL?	NW,W?BUT,W?EXCEPT /?ELS44
	EQUAL?	NW,W?AND,W?COMMA /?ELS44
	ADD	NUM,1 >?TMP1
	ADD	PTR,2
	MUL	STACK,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	RETURN	PTR
?ELS44:	SET	'ANDFLG,0
	JUMP	?CND14
?ELS37:	CALL	WT?,WORD,PS?ADJECTIVE
	ZERO?	STACK \?CND14
	CALL	WT?,WORD,PS?BUZZ-WORD
	ZERO?	STACK /?ELS50
	JUMP	?CND14
?ELS50:	ZERO?	ANDFLG /?ELS54
	CALL	WT?,WORD,PS?DIRECTION
	ZERO?	STACK \?THN57
	CALL	WT?,WORD,PS?VERB
	ZERO?	STACK /?ELS54
?THN57:	SUB	PTR,4 >PTR
	ADD	PTR,2
	PUT	P-LEXV,STACK,W?THEN
	ADD	P-LEN,2 >P-LEN
	JUMP	?CND14
?ELS54:	PRINTI	"I can't use the word '"
	PRINTB	WORD
	PRINTI	"' here."
	CRLF	
	RFALSE	
?ELS16:	CALL	UNKNOWN-WORD,PTR
	RFALSE	
?CND14:	SET	'FIRST??,0
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?PRG9


	.FUNCT	ORPHAN-MERGE,CNT=-1,TEMP,VERB,BEG,END,ADJ=0,WRD,?TMP1
	SET	'P-OFLAG,0
	GET	P-ITBL,P-VERB >VERB
	ZERO?	VERB /?ELS3
	GET	P-OTBL,P-VERB
	EQUAL?	VERB,STACK \FALSE
?ELS3:	EQUAL?	P-NCN,2 /FALSE
	GET	P-OTBL,P-NC1
	EQUAL?	STACK,1 \?ELS9
	GET	P-ITBL,P-PREP1 >TEMP
	GET	P-OTBL,P-PREP1
	EQUAL?	TEMP,STACK /?THN13
	ZERO?	TEMP \FALSE
?THN13:	GET	P-ITBL,P-NC1
	PUT	P-OTBL,P-NC1,STACK
	GET	P-ITBL,P-NC1L
	PUT	P-OTBL,P-NC1L,STACK
	JUMP	?CND1
?ELS9:	GET	P-OTBL,P-NC2
	EQUAL?	STACK,1 \?ELS18
	GET	P-ITBL,P-PREP1 >TEMP
	GET	P-OTBL,P-PREP2
	EQUAL?	TEMP,STACK /?THN22
	ZERO?	TEMP \FALSE
?THN22:	GET	P-ITBL,P-NC1
	PUT	P-OTBL,P-NC2,STACK
	GET	P-ITBL,P-NC1L
	PUT	P-OTBL,P-NC2L,STACK
	SET	'P-NCN,2
	JUMP	?CND1
?ELS18:	ZERO?	P-ACLAUSE /?CND1
	EQUAL?	P-NCN,1 /?ELS31
	SET	'P-ACLAUSE,0
	RFALSE	
?ELS31:	GET	P-ITBL,P-NC1 >BEG
	GET	P-ITBL,P-NC1L >END
?PRG34:	EQUAL?	BEG,END \?ELS38
	ZERO?	ADJ /?ELS41
	CALL	ACLAUSE-WIN,ADJ
	JUMP	?CND29
?ELS41:	SET	'P-ACLAUSE,0
	RFALSE	
?ELS38:	ZERO?	ADJ \?ELS46
	GET	BEG,0 >WRD
	GETB	WRD,P-PSOFF
	BTST	STACK,PS?ADJECTIVE \?ELS46
	SET	'ADJ,WRD
	JUMP	?CND36
?ELS46:	GETB	WRD,P-PSOFF
	BTST	STACK,PS?OBJECT /?THN51
	EQUAL?	WRD,W?ONE \?CND36
?THN51:	EQUAL?	WRD,P-ANAM,W?ONE \FALSE
	CALL	ACLAUSE-WIN,ADJ
	JUMP	?CND29
?CND36:	ADD	BEG,P-WORDLEN >BEG
	JUMP	?PRG34
?CND29:	
?CND1:	
?PRG58:	IGRTR?	'CNT,P-ITBLLEN /TRUE
	GET	P-OTBL,CNT
	PUT	P-ITBL,CNT,STACK
	JUMP	?PRG58


	.FUNCT	ACLAUSE-WIN,ADJ
	SET	'P-CCSRC,P-OTBL
	ADD	P-ACLAUSE,1
	CALL	CLAUSE-COPY,P-ACLAUSE,STACK,ADJ
	GET	P-OTBL,P-NC2
	ZERO?	STACK /?ELS2
	SET	'P-NCN,2
?ELS2:	SET	'P-ACLAUSE,0
	RTRUE	


	.FUNCT	WORD-PRINT,CNT,BUF
?PRG1:	DLESS?	'CNT,0 /TRUE
	GETB	P-INBUF,BUF
	PRINTC	STACK
	INC	'BUF
	JUMP	?PRG1


	.FUNCT	UNKNOWN-WORD,PTR,BUF,?TMP1
	PRINTI	"I don't know the word '"
	MUL	PTR,2 >BUF
	ADD	P-LEXV,BUF
	GETB	STACK,2 >?TMP1
	ADD	P-LEXV,BUF
	GETB	STACK,3
	CALL	WORD-PRINT,?TMP1,STACK
	PRINTI	"'."
	CRLF	
	SET	'P-OFLAG,0
	RTRUE	


	.FUNCT	CLEAR-ITBL,CNT=-1
?PRG1:	IGRTR?	'CNT,P-ITBLLEN /TRUE
	PUT	P-ITBL,CNT,0
	JUMP	?PRG1


	.FUNCT	SYNTAX-CHECK,SYN,LEN,NUM,OBJ,DRIVE1=0,DRIVE2=0,PREP,VERB,TMP,?TMP2,?TMP1
	GET	P-ITBL,P-VERB >VERB
	ZERO?	VERB \?CND1
	PRINTI	"You must supply a verb!"
	CRLF	
	RFALSE	
?CND1:	SUB	255,VERB
	GET	VERBS,STACK >SYN
	GETB	SYN,0 >LEN
	ADD	1,SYN >SYN
?PRG6:	GETB	SYN,P-SBITS
	BAND	STACK,P-SONUMS >NUM
	LESS?	NUM,1 /?ELS10
	ZERO?	P-NCN \?ELS10
	GET	P-ITBL,P-PREP1 >PREP
	ZERO?	PREP /?THN13
	GETB	SYN,P-SPREP1
	EQUAL?	PREP,STACK \?ELS10
?THN13:	SET	'DRIVE1,SYN
	JUMP	?CND8
?ELS10:	GETB	SYN,P-SPREP1 >?TMP1
	GET	P-ITBL,P-PREP1
	EQUAL?	?TMP1,STACK \?CND8
	EQUAL?	NUM,2 \?ELS19
	EQUAL?	P-NCN,1 \?ELS19
	SET	'DRIVE2,SYN
	JUMP	?CND8
?ELS19:	GETB	SYN,P-SPREP2 >?TMP1
	GET	P-ITBL,P-PREP2
	EQUAL?	?TMP1,STACK \?CND8
	CALL	SYNTAX-FOUND,SYN
	RTRUE	
?CND8:	DLESS?	'LEN,1 \?ELS26
	ZERO?	DRIVE1 \?REP7
	ZERO?	DRIVE2 /?ELS29
	JUMP	?REP7
?ELS29:	PRINTI	"I don't understand that sentence."
	CRLF	
	RFALSE	
?ELS26:	ADD	SYN,P-SYNLEN >SYN
	JUMP	?PRG6
?REP7:	ZERO?	DRIVE1 /?ELS42
	GETB	DRIVE1,P-SFWIM1 >?TMP2
	GETB	DRIVE1,P-SLOC1 >?TMP1
	GETB	DRIVE1,P-SPREP1
	CALL	GWIM,?TMP2,?TMP1,STACK >OBJ
	ZERO?	OBJ /?ELS42
	PUT	P-PRSO,P-MATCHLEN,1
	PUT	P-PRSO,1,OBJ
	CALL	SYNTAX-FOUND,DRIVE1
	RSTACK	
?ELS42:	ZERO?	DRIVE2 /?ELS46
	GETB	DRIVE2,P-SFWIM2 >?TMP2
	GETB	DRIVE2,P-SLOC2 >?TMP1
	GETB	DRIVE2,P-SPREP2
	CALL	GWIM,?TMP2,?TMP1,STACK >OBJ
	ZERO?	OBJ /?ELS46
	PUT	P-PRSI,P-MATCHLEN,1
	PUT	P-PRSI,1,OBJ
	CALL	SYNTAX-FOUND,DRIVE2
	RSTACK	
?ELS46:	CALL	ORPHAN,DRIVE1,DRIVE2
	PRINTI	"What do you want to "
	GET	P-OTBL,P-VERBN >TMP
	GETB	P-VTBL,2
	ZERO?	STACK \?ELS55
	GET	TMP,0
	PRINTB	STACK
	JUMP	?CND53
?ELS55:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	CALL	WORD-PRINT,?TMP1,STACK
	PUTB	P-VTBL,2,0
?CND53:	ZERO?	DRIVE2 /?CND58
	PRINTI	" the"
	CALL	CLAUSE-PRINT,P-PREP1,P-NC1,P-NC1L
?CND58:	SET	'P-OFLAG,1
	ZERO?	DRIVE1 /?ELS68
	GETB	DRIVE1,P-SPREP1
	JUMP	?CND64
?ELS68:	GETB	DRIVE2,P-SPREP2
?CND64:	CALL	PREP-PRINT,STACK
	PRINTI	"?"
	CRLF	
	RFALSE	


	.FUNCT	ORPHAN,D1,D2,CNT=-1
	PUT	P-OCLAUSE,P-MATCHLEN,0
	SET	'P-CCSRC,P-ITBL
?PRG1:	IGRTR?	'CNT,P-ITBLLEN \?ELS5
	JUMP	?REP2
?ELS5:	GET	P-ITBL,CNT
	PUT	P-OTBL,CNT,STACK
	JUMP	?PRG1
?REP2:	EQUAL?	P-NCN,2 \?CND8
	CALL	CLAUSE-COPY,P-NC2,P-NC2L
?CND8:	LESS?	P-NCN,1 /?CND11
	CALL	CLAUSE-COPY,P-NC1,P-NC1L
?CND11:	ZERO?	D1 /?ELS18
	GETB	D1,P-SPREP1
	PUT	P-OTBL,P-PREP1,STACK
	PUT	P-OTBL,P-NC1,1
	RTRUE	
?ELS18:	ZERO?	D2 /FALSE
	GETB	D2,P-SPREP2
	PUT	P-OTBL,P-PREP2,STACK
	PUT	P-OTBL,P-NC2,1
	RTRUE	


	.FUNCT	CLAUSE-PRINT,PPTR,BPTR,EPTR,BEG,END,?TMP1
	GET	P-ITBL,BPTR >BEG
	GET	P-ITBL,EPTR >END
	GET	P-OTBL,PPTR
	CALL	PREP-PRINT,STACK
?PRG1:	EQUAL?	BEG,END /TRUE
	PRINTI	" "
	ZERO?	P-OFLAG /?ELS12
	GET	BEG,0
	PRINTB	STACK
	JUMP	?CND3
?ELS12:	GETB	BEG,2 >?TMP1
	GETB	BEG,3
	CALL	WORD-PRINT,?TMP1,STACK
?CND3:	ADD	BEG,P-WORDLEN >BEG
	JUMP	?PRG1


	.FUNCT	PREP-PRINT,PREP
	ZERO?	PREP /FALSE
	PRINTI	" "
	CALL	PREP-FIND,PREP
	PRINTB	STACK
	RTRUE	


	.FUNCT	CLAUSE-COPY,BPTR,EPTR,INSERT=0,BEG,END
	GET	P-CCSRC,BPTR >BEG
	GET	P-CCSRC,EPTR >END
	GET	P-OCLAUSE,P-MATCHLEN
	MUL	STACK,P-LEXELEN
	ADD	STACK,2
	ADD	P-OCLAUSE,STACK
	PUT	P-OTBL,BPTR,STACK
?PRG1:	EQUAL?	BEG,END \?ELS5
	GET	P-OCLAUSE,P-MATCHLEN
	MUL	STACK,P-LEXELEN
	ADD	STACK,2
	ADD	P-OCLAUSE,STACK
	PUT	P-OTBL,EPTR,STACK
	RTRUE	
?ELS5:	ZERO?	INSERT /?CND8
	GET	BEG,0
	EQUAL?	P-ANAM,STACK \?CND8
	CALL	CLAUSE-ADD,INSERT
?CND8:	GET	BEG,0
	CALL	CLAUSE-ADD,STACK
?CND3:	ADD	BEG,P-WORDLEN >BEG
	JUMP	?PRG1


	.FUNCT	CLAUSE-ADD,WRD,PTR
	GET	P-OCLAUSE,P-MATCHLEN
	ADD	STACK,2 >PTR
	SUB	PTR,1
	PUT	P-OCLAUSE,STACK,WRD
	PUT	P-OCLAUSE,PTR,0
	PUT	P-OCLAUSE,P-MATCHLEN,PTR
	RTRUE	


	.FUNCT	PREP-FIND,PREP,CNT=0,SIZE
	GET	PREPOSITIONS,0
	MUL	STACK,2 >SIZE
?PRG1:	IGRTR?	'CNT,SIZE /FALSE
	GET	PREPOSITIONS,CNT
	EQUAL?	STACK,PREP \?PRG1
	SUB	CNT,1
	GET	PREPOSITIONS,STACK
	RETURN	STACK


	.FUNCT	SYNTAX-FOUND,SYN
	SET	'P-SYNTAX,SYN
	GETB	SYN,P-SACTION >PRSA
	RETURN	PRSA


	.FUNCT	GWIM,GBIT,LBIT,PREP,OBJ
	EQUAL?	GBIT,RMUNGBIT \?CND1
	RETURN	ROOMS
?CND1:	SET	'P-GWIMBIT,GBIT
	SET	'P-SLOCBITS,LBIT
	PUT	P-MERGE,P-MATCHLEN,0
	CALL	GET-OBJECT,P-MERGE,0
	ZERO?	STACK /?ELS8
	SET	'P-GWIMBIT,0
	GET	P-MERGE,P-MATCHLEN
	EQUAL?	STACK,1 \FALSE
	GET	P-MERGE,1 >OBJ
	PRINTI	"("
	ZERO?	PREP /?CND16
	CALL	PREP-FIND,PREP >PREP
	PRINTB	PREP
	EQUAL?	PREP,W?OUT \?CND19
	PRINTI	" of"
?CND19:	EQUAL?	OBJ,HANDS \?ELS26
	PRINTI	" your hands)"
	CRLF	
	JUMP	?CND16
?ELS26:	PRINTI	" the "
?CND16:	EQUAL?	OBJ,HANDS /?CND33
	PRINTD	OBJ
	PRINTI	")"
	CRLF	
?CND33:	RETURN	OBJ
?ELS8:	SET	'P-GWIMBIT,0
	RFALSE	


	.FUNCT	SNARF-OBJECTS,PTR
	GET	P-ITBL,P-NC1 >PTR
	ZERO?	PTR /?CND1
	GETB	P-SYNTAX,P-SLOC1 >P-SLOCBITS
	GET	P-ITBL,P-NC1L
	CALL	SNARFEM,PTR,STACK,P-PRSO
	ZERO?	STACK /FALSE
	GET	P-BUTS,P-MATCHLEN
	ZERO?	STACK /?CND1
	CALL	BUT-MERGE,P-PRSO >P-PRSO
?CND1:	GET	P-ITBL,P-NC2 >PTR
	ZERO?	PTR /TRUE
	GETB	P-SYNTAX,P-SLOC2 >P-SLOCBITS
	GET	P-ITBL,P-NC2L
	CALL	SNARFEM,PTR,STACK,P-PRSI
	ZERO?	STACK /FALSE
	GET	P-BUTS,P-MATCHLEN
	ZERO?	STACK /TRUE
	GET	P-PRSI,P-MATCHLEN
	EQUAL?	STACK,1 \?ELS18
	CALL	BUT-MERGE,P-PRSO >P-PRSO
	RTRUE	
?ELS18:	CALL	BUT-MERGE,P-PRSI >P-PRSI
	RTRUE	


	.FUNCT	BUT-MERGE,TBL,LEN,BUTLEN,CNT=1,MATCHES=0,OBJ,NTBL
	GET	TBL,P-MATCHLEN >LEN
	PUT	P-MERGE,P-MATCHLEN,0
?PRG1:	DLESS?	'LEN,0 \?ELS5
	JUMP	?REP2
?ELS5:	GET	TBL,CNT >OBJ
	CALL	ZMEMQ,OBJ,P-BUTS
	ZERO?	STACK /?ELS7
	JUMP	?CND3
?ELS7:	ADD	MATCHES,1
	PUT	P-MERGE,STACK,OBJ
	INC	'MATCHES
?CND3:	INC	'CNT
	JUMP	?PRG1
?REP2:	PUT	P-MERGE,P-MATCHLEN,MATCHES
	SET	'NTBL,P-MERGE
	SET	'P-MERGE,TBL
	RETURN	NTBL


	.FUNCT	SNARFEM,PTR,EPTR,TBL,AND=0,BUT=0,LEN,WV,WORD,NW
	SET	'P-GETFLAGS,0
	PUT	P-BUTS,P-MATCHLEN,0
	PUT	TBL,P-MATCHLEN,0
	GET	PTR,0 >WORD
?PRG1:	EQUAL?	PTR,EPTR \?ELS5
	ZERO?	BUT /?ORP9
	PUSH	BUT
	JUMP	?THN6
?ORP9:	PUSH	TBL
?THN6:	CALL	GET-OBJECT,STACK
	RETURN	STACK
?ELS5:	GET	PTR,P-LEXELEN >NW
	EQUAL?	WORD,W?ALL \?ELS14
	SET	'P-GETFLAGS,P-ALL
	EQUAL?	NW,W?OF \?CND12
	ADD	PTR,P-WORDLEN >PTR
	JUMP	?CND12
?ELS14:	EQUAL?	WORD,W?BUT,W?EXCEPT \?ELS19
	ZERO?	BUT /?ORP25
	PUSH	BUT
	JUMP	?THN22
?ORP25:	PUSH	TBL
?THN22:	CALL	GET-OBJECT,STACK
	ZERO?	STACK /FALSE
	SET	'BUT,P-BUTS
	PUT	BUT,P-MATCHLEN,0
	JUMP	?CND3
?ELS19:	EQUAL?	WORD,W?A,W?ONE \?ELS27
	ZERO?	P-ADJ \?ELS30
	SET	'P-GETFLAGS,P-ONE
	EQUAL?	NW,W?OF \?CND3
	ADD	PTR,P-WORDLEN >PTR
	JUMP	?CND3
?ELS30:	SET	'P-NAM,P-ONEOBJ
	ZERO?	BUT /?ORP41
	PUSH	BUT
	JUMP	?THN38
?ORP41:	PUSH	TBL
?THN38:	CALL	GET-OBJECT,STACK
	ZERO?	STACK /FALSE
	ZERO?	NW /TRUE
	JUMP	?CND3
?ELS27:	EQUAL?	WORD,W?AND,W?COMMA \?ELS45
	EQUAL?	NW,W?AND,W?COMMA /?ELS45
	ZERO?	BUT /?ORP53
	PUSH	BUT
	JUMP	?THN50
?ORP53:	PUSH	TBL
?THN50:	CALL	GET-OBJECT,STACK
	ZERO?	STACK \?CND12
	RFALSE	
?ELS45:	CALL	WT?,WORD,PS?BUZZ-WORD
	ZERO?	STACK /?ELS55
	JUMP	?CND3
?ELS55:	EQUAL?	WORD,W?AND,W?COMMA \?ELS57
	JUMP	?CND3
?ELS57:	EQUAL?	WORD,W?OF \?ELS59
	ZERO?	P-GETFLAGS \?CND12
	SET	'P-GETFLAGS,P-INHIBIT
	JUMP	?CND12
?ELS59:	CALL	WT?,WORD,PS?ADJECTIVE,P1?ADJECTIVE >WV
	ZERO?	WV /?ELS64
	SET	'P-ADJ,WV
	SET	'P-ADJN,WORD
	JUMP	?CND3
?ELS64:	CALL	WT?,WORD,PS?OBJECT,P1?OBJECT
	ZERO?	STACK /?CND3
	SET	'P-NAM,WORD
	SET	'P-ONEOBJ,WORD
?CND12:	
?CND3:	EQUAL?	PTR,EPTR /?PRG1
	ADD	PTR,P-WORDLEN >PTR
	SET	'WORD,NW
	JUMP	?PRG1


	.FUNCT	GET-OBJECT,TBL,VRB=1,BITS,LEN,XBITS,TLEN,GCHECK=0
	SET	'XBITS,P-SLOCBITS
	GET	TBL,P-MATCHLEN >TLEN
	BTST	P-GETFLAGS,P-INHIBIT /TRUE
	ZERO?	P-NAM \?CND4
	ZERO?	P-ADJ /?CND4
	CALL	WT?,P-ADJN,PS?OBJECT,P1?OBJECT
	ZERO?	STACK /?CND4
	SET	'P-NAM,P-ADJN
	SET	'P-ADJ,0
?CND4:	ZERO?	P-NAM \?CND9
	ZERO?	P-ADJ \?CND9
	EQUAL?	P-GETFLAGS,P-ALL /?CND9
	ZERO?	P-GWIMBIT \?CND9
	ZERO?	VRB /FALSE
	PRINTI	"There is a noun missing in that sentence."
	CRLF	
	RFALSE	
?CND9:	EQUAL?	P-GETFLAGS,P-ALL \?THN23
	ZERO?	P-SLOCBITS \?CND20
?THN23:	SET	'P-SLOCBITS,-1
?CND20:	SET	'P-TABLE,TBL
?PRG25:	ZERO?	GCHECK /?ELS29
	CALL	GLOBAL-CHECK,TBL
	JUMP	?CND27
?ELS29:	ZERO?	LIT /?CND33
	CALL	DO-SL,HERE,SOG,SIR
?CND33:	CALL	DO-SL,ADVENTURER,SH,SC
	EQUAL?	WINNER,ADVENTURER /?CND27
	CALL	DO-SL,WINNER,SH,SC
?CND27:	GET	TBL,P-MATCHLEN
	SUB	STACK,TLEN >LEN
	BTST	P-GETFLAGS,P-ALL \?ELS42
	JUMP	?CND40
?ELS42:	BTST	P-GETFLAGS,P-ONE \?ELS44
	ZERO?	LEN /?ELS44
	EQUAL?	LEN,1 /?CND47
	RANDOM	LEN
	GET	TBL,STACK
	PUT	TBL,1,STACK
	PRINTI	"(How about the "
	GET	TBL,1
	PRINTD	STACK
	PRINTI	"?)"
	CRLF	
?CND47:	PUT	TBL,P-MATCHLEN,1
	JUMP	?CND40
?ELS44:	GRTR?	LEN,1 /?THN56
	ZERO?	LEN \?ELS55
	EQUAL?	P-SLOCBITS,-1 /?ELS55
?THN56:	EQUAL?	P-SLOCBITS,-1 \?ELS62
	SET	'P-SLOCBITS,XBITS
	GET	TBL,P-MATCHLEN
	SUB	STACK,LEN
	PUT	TBL,P-MATCHLEN,STACK
	JUMP	?PRG25
?ELS62:	ZERO?	VRB /?CND65
	CALL	WHICH-PRINT,TLEN,LEN,TBL
	EQUAL?	TBL,P-PRSO \?ELS73
	PUSH	P-NC1
	JUMP	?CND69
?ELS73:	PUSH	P-NC2
?CND69:	SET	'P-ACLAUSE,STACK
	SET	'P-AADJ,P-ADJ
	SET	'P-ANAM,P-NAM
	CALL	ORPHAN,0,0
	SET	'P-OFLAG,1
?CND65:	SET	'P-NAM,0
	SET	'P-ADJ,0
	RFALSE	
?ELS55:	ZERO?	LEN \?ELS77
	ZERO?	GCHECK /?ELS77
	ZERO?	VRB /?CND80
	ZERO?	LIT /?ELS86
	PRINTI	"I can't see any"
	ZERO?	P-ADJ /?CND90
	PRINTI	" "
	PRINTB	P-ADJN
?CND90:	ZERO?	P-NAM /?CND96
	PRINTI	" "
	PRINTB	P-NAM
?CND96:	PRINTI	" here."
	CRLF	
	JUMP	?CND80
?ELS86:	PRINTI	"It's too dark to see."
	CRLF	
?CND80:	SET	'P-NAM,0
	SET	'P-ADJ,0
	RFALSE	
?ELS77:	ZERO?	LEN \?CND40
	SET	'GCHECK,1
	JUMP	?PRG25
?CND40:	SET	'P-ADJ,0
	SET	'P-NAM,0
	SET	'P-SLOCBITS,XBITS
	RTRUE	


	.FUNCT	WHICH-PRINT,TLEN,LEN,TBL,OBJ,RLEN
	SET	'RLEN,LEN
	PRINTI	"Which "
	PRINTB	P-NAM
	PRINTI	" do you mean, "
?PRG5:	INC	'TLEN
	GET	TBL,TLEN >OBJ
	PRINTI	"the "
	PRINTD	OBJ
	EQUAL?	LEN,2 \?ELS11
	EQUAL?	RLEN,2 /?CND12
	PRINTI	","
?CND12:	PRINTI	" or "
	JUMP	?CND9
?ELS11:	GRTR?	LEN,2 \?CND9
	PRINTI	", "
?CND9:	DLESS?	'LEN,1 \?PRG5
	PRINTR	"?"


	.FUNCT	GLOBAL-CHECK,TBL,LEN,RMG,RMGL,CNT=0,OBJ,OBITS,FOO
	GET	TBL,P-MATCHLEN >LEN
	SET	'OBITS,P-SLOCBITS
	GETPT	HERE,P?GLOBAL >RMG
	ZERO?	RMG /?CND1
	PTSIZE	RMG
	SUB	STACK,1 >RMGL
?PRG4:	GETB	RMG,CNT >OBJ
	CALL	THIS-IT?,OBJ,TBL
	ZERO?	STACK /?CND6
	CALL	OBJ-FOUND,OBJ,TBL
?CND6:	IGRTR?	'CNT,RMGL \?PRG4
?CND1:	GETPT	HERE,P?PSEUDO >RMG
	ZERO?	RMG /?CND12
	PTSIZE	RMG
	DIV	STACK,4
	SUB	STACK,1 >RMGL
	SET	'CNT,0
?PRG15:	MUL	CNT,2
	GET	RMG,STACK
	EQUAL?	P-NAM,STACK \?ELS19
	MUL	CNT,2
	ADD	STACK,1
	GET	RMG,STACK
	PUTP	PSEUDO-OBJECT,P?ACTION,STACK
	GETPT	PSEUDO-OBJECT,P?ACTION
	SUB	STACK,5 >FOO
	GET	P-NAM,0
	PUT	FOO,0,STACK
	GET	P-NAM,1
	PUT	FOO,1,STACK
	CALL	OBJ-FOUND,PSEUDO-OBJECT,TBL
	JUMP	?CND12
?ELS19:	IGRTR?	'CNT,RMGL \?PRG15
?CND12:	GET	TBL,P-MATCHLEN
	EQUAL?	STACK,LEN \FALSE
	SET	'P-SLOCBITS,-1
	SET	'P-TABLE,TBL
	CALL	DO-SL,GLOBAL-OBJECTS,1,1
	SET	'P-SLOCBITS,OBITS
	RTRUE	


	.FUNCT	DO-SL,OBJ,BIT1,BIT2,BITS
	ADD	BIT1,BIT2
	BTST	P-SLOCBITS,STACK \?ELS5
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCALL
	RSTACK	
?ELS5:	BTST	P-SLOCBITS,BIT1 \?ELS12
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCTOP
	RSTACK	
?ELS12:	BTST	P-SLOCBITS,BIT2 \TRUE
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCBOT
	RSTACK	


	.FUNCT	SEARCH-LIST,OBJ,TBL,LVL,FLS,NOBJ
	FIRST?	OBJ >OBJ \FALSE
?PRG6:	EQUAL?	LVL,P-SRCBOT /?CND8
	CALL	THIS-IT?,OBJ,TBL
	ZERO?	STACK /?CND8
	CALL	OBJ-FOUND,OBJ,TBL
?CND8:	EQUAL?	LVL,P-SRCTOP \?THN18
	FSET?	OBJ,SEARCHBIT /?THN18
	FSET?	OBJ,SURFACEBIT \?CND13
?THN18:	FIRST?	OBJ >NOBJ \?CND13
	FSET?	OBJ,OPENBIT /?THN20
	FSET?	OBJ,TRANSBIT \?CND13
?THN20:	FSET?	OBJ,SURFACEBIT \?ELS26
	PUSH	P-SRCALL
	JUMP	?CND22
?ELS26:	FSET?	OBJ,SEARCHBIT \?ELS28
	PUSH	P-SRCALL
	JUMP	?CND22
?ELS28:	PUSH	P-SRCTOP
?CND22:	CALL	SEARCH-LIST,OBJ,TBL,STACK >FLS
?CND13:	NEXT?	OBJ >OBJ /?PRG6
	RTRUE	


	.FUNCT	OBJ-FOUND,OBJ,TBL,PTR
	GET	TBL,P-MATCHLEN >PTR
	ADD	PTR,1
	PUT	TBL,STACK,OBJ
	ADD	PTR,1
	PUT	TBL,P-MATCHLEN,STACK
	RTRUE	


	.FUNCT	TAKE-CHECK
	GETB	P-SYNTAX,P-SLOC1
	CALL	ITAKE-CHECK,P-PRSO,STACK
	ZERO?	STACK /FALSE
	GETB	P-SYNTAX,P-SLOC2
	CALL	ITAKE-CHECK,P-PRSI,STACK
	RSTACK	


	.FUNCT	ITAKE-CHECK,TBL,BITS,PTR,OBJ,TAKEN
	GET	TBL,P-MATCHLEN >PTR
	ZERO?	PTR /TRUE
	BTST	BITS,STAKE \TRUE
?PRG8:	DLESS?	'PTR,0 /TRUE
	ADD	PTR,1
	GET	TBL,STACK >OBJ
	EQUAL?	OBJ,IT \?CND15
	SET	'OBJ,P-IT-OBJECT
?CND15:	IN?	OBJ,WINNER /?PRG8
	SET	'PRSO,OBJ
	FSET?	OBJ,TRYTAKEBIT \?ELS23
	SET	'TAKEN,1
	JUMP	?CND21
?ELS23:	CALL	ITAKE,0
	EQUAL?	STACK,1 \?ELS25
	SET	'TAKEN,0
	JUMP	?CND21
?ELS25:	SET	'TAKEN,1
?CND21:	ZERO?	TAKEN /?ELS30
	BTST	BITS,SHAVE \?ELS30
	PRINTI	"You don't have the "
	PRINTD	OBJ
	PRINTI	"."
	CRLF	
	RFALSE	
?ELS30:	ZERO?	TAKEN \?PRG8
	PRINTI	"(Taken)"
	CRLF	
	JUMP	?PRG8


	.FUNCT	MANY-CHECK,LOSS=0,TMP,?TMP1
	GET	P-PRSO,P-MATCHLEN
	GRTR?	STACK,1 \?ELS3
	GETB	P-SYNTAX,P-SLOC1
	BTST	STACK,SMANY /?ELS3
	SET	'LOSS,1
	JUMP	?CND1
?ELS3:	GET	P-PRSI,P-MATCHLEN
	GRTR?	STACK,1 \?CND1
	GETB	P-SYNTAX,P-SLOC2
	BTST	STACK,SMANY /?CND1
	SET	'LOSS,2
?CND1:	ZERO?	LOSS /TRUE
	PRINTI	"You can't use multiple "
	EQUAL?	LOSS,2 \?CND18
	PRINTI	"in"
?CND18:	PRINTI	"direct objects with '"
	GET	P-ITBL,P-VERBN >TMP
	ZERO?	P-OFLAG /?ELS27
	GET	TMP,0
	PRINTB	STACK
	JUMP	?CND25
?ELS27:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	CALL	WORD-PRINT,?TMP1,STACK
?CND25:	PRINTI	"'."
	CRLF	
	RFALSE	


	.FUNCT	ZMEMQ,ITM,TBL,SIZE=-1,CNT=1
	ZERO?	TBL /FALSE
	LESS?	SIZE,0 /?ELS6
	SET	'CNT,0
	JUMP	?CND4
?ELS6:	GET	TBL,0 >SIZE
?CND4:	
?PRG9:	GET	TBL,CNT
	EQUAL?	ITM,STACK /TRUE
	IGRTR?	'CNT,SIZE \?PRG9
	RFALSE	


	.FUNCT	ZMEMQB,ITM,TBL,SIZE,CNT=0
?PRG1:	GETB	TBL,CNT
	EQUAL?	ITM,STACK /TRUE
	IGRTR?	'CNT,SIZE \?PRG1
	RFALSE	


	.FUNCT	LIT?,RM,OHERE,LIT=0
	SET	'P-GWIMBIT,ONBIT
	SET	'OHERE,HERE
	SET	'HERE,RM
	FSET?	RM,ONBIT /?THN4
	ZERO?	ALWAYS-LIT /?ELS3
?THN4:	SET	'LIT,1
	JUMP	?CND1
?ELS3:	PUT	P-MERGE,P-MATCHLEN,0
	SET	'P-TABLE,P-MERGE
	SET	'P-SLOCBITS,-1
	EQUAL?	OHERE,RM \?CND8
	CALL	DO-SL,WINNER,1,1
?CND8:	CALL	DO-SL,RM,1,1
	GET	P-TABLE,P-MATCHLEN
	GRTR?	STACK,0 \?CND1
	SET	'LIT,1
?CND1:	SET	'HERE,OHERE
	SET	'P-GWIMBIT,0
	RETURN	LIT

	.ENDI
